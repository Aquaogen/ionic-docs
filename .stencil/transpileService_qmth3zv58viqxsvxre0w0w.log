{"moduleFile":{"sourceFilePath":"C:/Users/Administrator/Desktop/ionic-docs-v1/src/components/color-gen/color-generator/color-generator.tsx","localImports":["C:/Users/Administrator/Desktop/ionic-docs-v1/src/components/color-gen/parse-css"],"externalImports":["@stencil/core"],"potentialCmpRefs":[{"tag":"color-gen-select-colors"},{"tag":"color-gen-css-text"}],"cmpMeta":{"tagNameMeta":"color-generator","stylesMeta":{"$":{"externalStyles":[{"absolutePath":"C:/Users/Administrator/Desktop/ionic-docs-v1/src/components/color-gen/color-generator/color-generator.css","cmpRelativePath":"color-generator.css","originalComponentPath":"color-generator.css"}]}},"assetsDirsMeta":[],"hostMeta":{},"dependencies":[],"jsdoc":{"name":"ColorGenerator","tags":[],"documentation":"","type":"typeof ColorGenerator"},"encapsulationMeta":1,"componentClass":"ColorGenerator","membersMeta":{"el":{"memberType":64},"colors":{"memberType":16},"cssText":{"memberType":16}},"eventsMeta":[{"eventMethodName":"previewMessage","eventName":"previewMessage","eventBubbles":true,"eventCancelable":true,"eventComposed":true,"jsdoc":{"name":"previewMessage","tags":[],"documentation":"","type":"EventEmitter<any>"}}],"listenersMeta":[{"eventName":"colorChange","eventMethodName":"onColorChange","eventCapture":false,"eventPassive":false,"eventDisabled":false,"jsdoc":{"name":"onColorChange","tags":[],"documentation":"","type":"(ev: any) => void"}},{"eventName":"cssTextChange","eventMethodName":"onCssTextChange","eventCapture":false,"eventPassive":false,"eventDisabled":false,"jsdoc":{"name":"onCssTextChange","tags":[],"documentation":"","type":"(ev: any) => void"}}]},"hasSlot":false,"hasSvg":false,"jsFilePath":"C:/Users/Administrator/Desktop/ionic-docs-v1/src/components/color-gen/color-generator/color-generator.js"},"jsText":"import { convertCssToColors, generateColor, updateCssText } from '../parse-css';\r\nexport class ColorGenerator {\r\n    constructor() {\r\n        this.colors = [];\r\n        this.cssText = DEFAULT_CSS_TEXT;\r\n    }\r\n    onColorChange(ev) {\r\n        const colorProperty = ev.detail.property;\r\n        const colorValue = ev.detail.value;\r\n        const colorIndex = this.colors.findIndex(o => o.property === colorProperty);\r\n        const color = this.colors[colorIndex];\r\n        const genColor = generateColor(color.name, colorProperty, colorValue);\r\n        this.colors[colorIndex] = genColor;\r\n        this.colors = [...this.colors];\r\n        const attrMap = {\r\n            value: '',\r\n            valueRgb: '-rgb',\r\n            contrast: '-contrast',\r\n            contrastRgb: '-contrast-rgb',\r\n            shade: '-shade',\r\n            tint: '-tint',\r\n        };\r\n        Object.keys(attrMap).forEach(key => {\r\n            this.cssText = updateCssText(colorProperty + attrMap[key], this.cssText, genColor[key]);\r\n        });\r\n        this.previewMessage.emit({ cssText: this.cssText });\r\n    }\r\n    onCssTextChange(ev) {\r\n        this.cssText = ev.detail;\r\n        const colors = convertCssToColors(this.cssText);\r\n        if (colors.length > 0) {\r\n            this.colors = colors;\r\n            this.previewMessage.emit({ cssText: this.cssText });\r\n        }\r\n    }\r\n    componentWillLoad() {\r\n        this.colors = convertCssToColors(this.cssText);\r\n    }\r\n    componentDidLoad() {\r\n        this.previewMessage.emit({\r\n            cssText: this.cssText\r\n        });\r\n    }\r\n    render() {\r\n        return [\r\n            h(\"color-gen-select-colors\", { colors: this.colors }),\r\n            h(\"color-gen-css-text\", { cssText: this.cssText })\r\n        ];\r\n    }\r\n    static get is() { return \"color-generator\"; }\r\n    static get encapsulation() { return \"shadow\"; }\r\n    static get properties() { return {\r\n        \"colors\": {\r\n            \"state\": true\r\n        },\r\n        \"cssText\": {\r\n            \"state\": true\r\n        },\r\n        \"el\": {\r\n            \"elementRef\": true\r\n        }\r\n    }; }\r\n    static get events() { return [{\r\n            \"name\": \"previewMessage\",\r\n            \"method\": \"previewMessage\",\r\n            \"bubbles\": true,\r\n            \"cancelable\": true,\r\n            \"composed\": true\r\n        }]; }\r\n    static get listeners() { return [{\r\n            \"name\": \"colorChange\",\r\n            \"method\": \"onColorChange\"\r\n        }, {\r\n            \"name\": \"cssTextChange\",\r\n            \"method\": \"onCssTextChange\"\r\n        }]; }\r\n    static get style() { return \"/**style-placeholder:color-generator:**/\"; }\r\n}\r\nconst DEFAULT_CSS_TEXT = `\n:root {\n  --ion-color-primary: #3880ff;\n  --ion-color-primary-rgb: 56,128,255;\n  --ion-color-primary-contrast: #ffffff;\n  --ion-color-primary-contrast-rgb: 255,255,255;\n  --ion-color-primary-shade: #3171e0;\n  --ion-color-primary-tint: #4c8dff;\n\n  --ion-color-secondary: #0cd1e8;\n  --ion-color-secondary-rgb: 12,209,232;\n  --ion-color-secondary-contrast: #ffffff;\n  --ion-color-secondary-contrast-rgb: 255,255,255;\n  --ion-color-secondary-shade: #0bb8cc;\n  --ion-color-secondary-tint: #24d6ea;\n\n  --ion-color-tertiary: #7044ff;\n  --ion-color-tertiary-rgb: 112,68,255;\n  --ion-color-tertiary-contrast: #ffffff;\n  --ion-color-tertiary-contrast-rgb: 255,255,255;\n  --ion-color-tertiary-shade: #633ce0;\n  --ion-color-tertiary-tint: #7e57ff;\n\n  --ion-color-success: #10dc60;\n  --ion-color-success-rgb: 16,220,96;\n  --ion-color-success-contrast: #ffffff;\n  --ion-color-success-contrast-rgb: 255,255,255;\n  --ion-color-success-shade: #0ec254;\n  --ion-color-success-tint: #28e070;\n\n  --ion-color-warning: #ffce00;\n  --ion-color-warning-rgb: 255,206,0;\n  --ion-color-warning-contrast: #ffffff;\n  --ion-color-warning-contrast-rgb: 255,255,255;\n  --ion-color-warning-shade: #e0b500;\n  --ion-color-warning-tint: #ffd31a;\n\n  --ion-color-danger: #f04141;\n  --ion-color-danger-rgb: 245,61,61;\n  --ion-color-danger-contrast: #ffffff;\n  --ion-color-danger-contrast-rgb: 255,255,255;\n  --ion-color-danger-shade: #d33939;\n  --ion-color-danger-tint: #f25454;\n\n  --ion-color-dark: #222428;\n  --ion-color-dark-rgb: 34,34,34;\n  --ion-color-dark-contrast: #ffffff;\n  --ion-color-dark-contrast-rgb: 255,255,255;\n  --ion-color-dark-shade: #1e2023;\n  --ion-color-dark-tint: #383a3e;\n\n  --ion-color-medium: #989aa2;\n  --ion-color-medium-rgb: 152,154,162;\n  --ion-color-medium-contrast: #ffffff;\n  --ion-color-medium-contrast-rgb: 255,255,255;\n  --ion-color-medium-shade: #86888f;\n  --ion-color-medium-tint: #a2a4ab;\n\n  --ion-color-light: #f4f5f8;\n  --ion-color-light-rgb: 244,244,244;\n  --ion-color-light-contrast: #000000;\n  --ion-color-light-contrast-rgb: 0,0,0;\n  --ion-color-light-shade: #d7d8da;\n  --ion-color-light-tint: #f5f6f9;\n}\n`.trim();\r\n"}