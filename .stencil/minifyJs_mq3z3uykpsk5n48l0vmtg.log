function t(t){const r=t.toString(16);return 1===r.length?`0${r}`:r}function r(t){return`#${(t=t.replace(/^#?([a-f\d])([a-f\d])([a-f\d])$/i,(t,r,n,s)=>r+r+n+n+s+s)).replace("#","")}`}function n({r,g:n,b:s}){return"#"+t(r)+t(n)+t(s)}function s({r:t,g:r,b:n}){t=Math.max(Math.min(t/255,1),0),r=Math.max(Math.min(r/255,1),0),n=Math.max(Math.min(n/255,1),0);const s=Math.max(t,r,n),i=Math.min(t,r,n),e=Math.min(1,Math.max(0,(s+i)/2));let h,a,o;return s!==i?(h=s-i,o=e>.5?h/(2-s-i):h/(s+i),a=s===t?(r-n)/h+(r<n?6:0):s===r?(n-t)/h+2:(t-r)/h+4,a/=6):a=o=0,{h:Math.round(360*a),s:Math.round(100*o),l:Math.round(100*e)}}window;class i{constructor(t){if("string"==typeof t&&/rgb\(/.test(t)){const r=/rgb\((\d{1,3}), ?(\d{1,3}), ?(\d{1,3})\)/.exec(t);t={r:parseInt(r[0],10),g:parseInt(r[1],10),b:parseInt(r[2],10)}}else if("string"==typeof t&&/hsl\(/.test(t)){const r=/hsl\((\d{1,3}), ?(\d{1,3}%), ?(\d{1,3}%)\)/.exec(t);t={h:parseInt(r[0],10),s:parseInt(r[1],10),l:parseInt(r[2],10)}}if("string"==typeof t)t=t.replace(/\s/g,""),this.hex=r(t),this.rgb=function(t){t=(t=r(t)).replace("#","");const n=parseInt(t,16);return{r:n>>16&255,g:n>>8&255,b:255&n}}(this.hex),this.hsl=s(this.rgb);else if("r"in t&&"g"in t&&"b"in t)this.rgb=t,this.hex=n(this.rgb),this.hsl=s(this.rgb);else{if(!("h"in t&&"s"in t&&"l"in t))return null;this.hsl=t,this.rgb=function({h:t,s:r,l:n}){if(t/=360,n/=100,0==(r/=100))return{r:n=Math.round(255*n),g:n,b:n};const s=(t,r,n)=>(n<0&&(n+=1),n>1&&(n-=1),n<1/6?t+6*(r-t)*n:n<.5?r:n<2/3?t+(r-t)*(2/3-n)*6:t),i=n<.5?n*(1+r):n+r-n*r,e=2*n-i,h=s(e,i,t+1/3),a=s(e,i,t),o=s(e,i,t-1/3);return{r:Math.round(255*h),g:Math.round(255*a),b:Math.round(255*o)}}(this.hsl),this.hex=n(this.rgb)}this.yiq=function({r:t,g:r,b:n}){return(299*t+587*r+114*n)/1e3}(this.rgb)}static isColor(t){return!!/rgb\((\d{1,3}), ?(\d{1,3}), ?(\d{1,3})\)/.test(t)||/(^#[0-9a-fA-F]+)/.test(t.trim())}contrast(t=128){return new i(this.yiq>=t?"#000":"#fff")}mix(t,r=.5){const n=t instanceof i?t:new i(t);return new i(function(t,r,s=.5){const i=t.rgb,e=n.rgb,h=1-s;return{r:Math.round(s*e.r+h*i.r),g:Math.round(s*e.g+h*i.g),b:Math.round(s*e.b+h*i.b)}}(this,0,r))}shade(t=.12){return this.mix({r:0,g:0,b:0},t)}tint(t=.1){return this.mix({r:255,g:255,b:255},t)}toList(){const{r:t,g:r,b:n}=this.rgb;return`${t},${r},${n}`}}export{i as a};