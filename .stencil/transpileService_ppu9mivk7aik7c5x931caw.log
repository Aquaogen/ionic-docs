{"moduleFile":{"sourceFilePath":"C:/Users/Administrator/Desktop/ionic-docs-v1/src/components/docs-root/docs-root.tsx","localImports":[],"externalImports":["@stencil/core","@stencil/router","intersection-observer","intersection-observer"],"potentialCmpRefs":[{"tag":"stencil-router"},{"tag":"stencil-route"},{"tag":"docs-layout"},{"tag":"docs-menu"},{"tag":"docs-header"},{"tag":"docs-content"},{"tag":"docs-document"},{"tag":"docs-preview"}],"cmpMeta":{"tagNameMeta":"docs-root","stylesMeta":{},"assetsDirsMeta":[],"hostMeta":{},"dependencies":[],"jsdoc":{"name":"DocsRoot","tags":[],"documentation":"","type":"typeof DocsRoot"},"encapsulationMeta":0,"componentClass":"DocsRoot","membersMeta":{"previewUrl":{"memberType":16},"previewSource":{"memberType":16},"isMenuOpen":{"memberType":16},"pageClass":{"memberType":16}},"eventsMeta":[],"listenersMeta":[]},"hasSlot":false,"hasSvg":false,"jsFilePath":"C:/Users/Administrator/Desktop/ionic-docs-v1/src/components/docs-root/docs-root.js"},"jsText":"import 'intersection-observer';\r\nexport class DocsRoot {\r\n    constructor() {\r\n        this.isMenuOpen = false;\r\n        this.handleDocumentUpdate = (document) => {\r\n            this.previewUrl = document.previewUrl || null;\r\n            this.previewSource = document.previewSource || null;\r\n            this.pageClass = document.pageClass;\r\n            this.closeMenu();\r\n        };\r\n        this.toggleMenu = () => {\r\n            this.isMenuOpen = !this.isMenuOpen;\r\n        };\r\n        this.closeMenu = () => {\r\n            this.isMenuOpen = false;\r\n        };\r\n    }\r\n    parseSection(path) {\r\n        const match = /^(api|cli|native|pro)(\\/.*)?/.exec(path);\r\n        return match && match[1] || 'framework';\r\n    }\r\n    setScrollPosition() {\r\n        const { hash } = window.location;\r\n        const target = hash ? document.querySelector(hash) : this.document;\r\n        if (target) {\r\n            target.scrollIntoView();\r\n        }\r\n    }\r\n    componentDidUpdate() {\r\n        this.setScrollPosition();\r\n    }\r\n    render() {\r\n        return (h(\"stencil-router\", null,\r\n            h(\"stencil-route\", { url: ['/docs/:document*', '/docs/'], routeRender: props => {\r\n                    const documentPath = props.match.params.document || 'index';\r\n                    const section = this.parseSection(documentPath);\r\n                    const layoutClass = {\r\n                        ['is-menu-open']: this.isMenuOpen,\r\n                        [`section-${section}`]: true,\r\n                        [`page-${this.pageClass || documentPath.replace(/\\//g, '')}`]: true\r\n                    };\r\n                    return (h(\"docs-layout\", { class: layoutClass },\r\n                        h(\"docs-menu\", { section: section, path: props.match.url }),\r\n                        h(\"docs-header\", { section: section, isMenuOpen: this.isMenuOpen, onToggleClick: this.toggleMenu }),\r\n                        h(\"docs-content\", { onOverlayClick: this.closeMenu, showOverlay: this.isMenuOpen },\r\n                            h(\"docs-document\", { ref: node => { this.document = node; }, path: documentPath, onUpdate: this.handleDocumentUpdate }),\r\n                            h(\"docs-preview\", { url: this.previewUrl, source: this.previewSource }))));\r\n                } })));\r\n    }\r\n    static get is() { return \"docs-root\"; }\r\n    static get properties() { return {\r\n        \"isMenuOpen\": {\r\n            \"state\": true\r\n        },\r\n        \"pageClass\": {\r\n            \"state\": true\r\n        },\r\n        \"previewSource\": {\r\n            \"state\": true\r\n        },\r\n        \"previewUrl\": {\r\n            \"state\": true\r\n        }\r\n    }; }\r\n}\r\n"}