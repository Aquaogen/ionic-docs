{"moduleFile":{"sourceFilePath":"C:/Users/Administrator/Desktop/ionic-docs-v1/src/components/color-accordion/color-accordion.tsx","localImports":[],"externalImports":["@stencil/core"],"potentialCmpRefs":[],"cmpMeta":{"tagNameMeta":"color-accordion","stylesMeta":{"$":{"externalStyles":[{"absolutePath":"C:/Users/Administrator/Desktop/ionic-docs-v1/src/components/color-accordion/color-accordion.css","cmpRelativePath":"color-accordion.css","originalComponentPath":"color-accordion.css"}]}},"assetsDirsMeta":[],"hostMeta":{},"dependencies":[],"jsdoc":{"name":"ColorAccordion","tags":[],"documentation":"","type":"typeof ColorAccordion"},"encapsulationMeta":0,"componentClass":"ColorAccordion","membersMeta":{"el":{"memberType":64},"activeColor":{"memberType":16}},"eventsMeta":[],"listenersMeta":[]},"hasSlot":false,"hasSvg":true,"jsFilePath":"C:/Users/Administrator/Desktop/ionic-docs-v1/src/components/color-accordion/color-accordion.js"},"jsText":"export class ColorAccordion {\r\n    constructor() {\r\n        this.colors = ['primary', 'secondary', 'tertiary', 'success', 'warning', 'danger', 'dark', 'medium', 'light'];\r\n        this.activeColor = '';\r\n    }\r\n    toggleActiveColor(color) {\r\n        if (this.activeColor === color) {\r\n            this.activeColor = '';\r\n            return;\r\n        }\r\n        this.activeColor = color;\r\n    }\r\n    render() {\r\n        const listItems = this.colors.map(color => {\r\n            const isActive = (this.activeColor === color) ? true : false;\r\n            const baseColor = getComputedStyle(this.el).getPropertyValue(`--ion-color-${color}`);\r\n            const shadeColor = getComputedStyle(this.el).getPropertyValue(`--ion-color-${color}-shade`);\r\n            const tintColor = getComputedStyle(this.el).getPropertyValue(`--ion-color-${color}-tint`);\r\n            return (h(\"li\", { class: {\r\n                    'color-menu-item': true,\r\n                    'color-menu-item-active': isActive\r\n                }, style: {\r\n                    'background-color': `var(--ion-color-${color})`,\r\n                    'color': `var(--ion-color-${color}-contrast)`\r\n                } },\r\n                h(\"div\", { class: \"color-menu-text\", onClick: () => this.toggleActiveColor(color) },\r\n                    color[0].toUpperCase() + color.substr(1),\r\n                    h(\"div\", { class: \"color-menu-value\" }, baseColor)),\r\n                h(\"svg\", { width: \"10px\", height: \"6px\", viewBox: \"0 0 10 6\", version: \"1.1\", xmlns: \"http://www.w3.org/2000/svg\" },\r\n                    h(\"g\", { id: \"Welcome\", stroke: \"none\", \"stroke-width\": \"1\", fill: \"none\", \"fill-rule\": \"evenodd\", \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\" },\r\n                        h(\"g\", { id: \"Desktop-HD\", transform: \"translate(-1025.000000, -335.000000)\", stroke: \"currentColor\", \"stroke-width\": \"2\" },\r\n                            h(\"polyline\", { id: \"arrow\", transform: \"translate(1030.000000, 338.000000) rotate(90.000000) translate(-1030.000000, -338.000000) \", points: \"1028 334 1032 338.020022 1028 342\" })))),\r\n                h(\"ul\", { class: \"color-submenu\" },\r\n                    h(\"li\", { class: \"color-submenu-item\", style: {\r\n                            'background-color': `var(--ion-color-${color}-shade)`,\r\n                            'color': `var(--ion-color-${color}-contrast)`\r\n                        } },\r\n                        h(\"div\", { class: \"color-menu-text\" },\r\n                            \"Shade\",\r\n                            h(\"div\", { class: \"color-menu-value\" }, shadeColor))),\r\n                    h(\"li\", { class: \"color-submenu-item\", style: {\r\n                            'background-color': `var(--ion-color-${color}-tint)`,\r\n                            'color': `var(--ion-color-${color}-contrast)`\r\n                        } },\r\n                        h(\"div\", { class: \"color-menu-text\" },\r\n                            \"Tint\",\r\n                            h(\"div\", { class: \"color-menu-value\" }, tintColor))))));\r\n        });\r\n        return (h(\"ul\", { class: \"color-menu\" }, listItems));\r\n    }\r\n    static get is() { return \"color-accordion\"; }\r\n    static get properties() { return {\r\n        \"activeColor\": {\r\n            \"state\": true\r\n        },\r\n        \"el\": {\r\n            \"elementRef\": true\r\n        }\r\n    }; }\r\n    static get style() { return \"/**style-placeholder:color-accordion:**/\"; }\r\n}\r\n"}